name: Test Project
on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
      print_tags:
        description: 'True to print to STDOUT'
        required: true
        type: boolean
      tags:
        description: 'Test scenario tags'
        required: true
        type: string
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true
jobs:
  deploy:
    environment: staging
    permissions:
      checks: write
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4.1.1
      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.0
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Install linters
        run: |
          npm install -g eslint
      - name: Lint code
        run: |
          eslint .
      - name: Create GitHub Check Run
        uses: actions/github-script@v7.0.1
        with:
          script: |
            github.rest.checks.create({
              owner: context.repo.owner,
              name: "Lint",
              head_sha: context.sha,
              repo: context.repo.repo,
              status: "completed",
              conclusion: "failure",
              output: {
                title: "Code Style",
                summary: "Linting your code for stylistic issues...",
                annotations: [
                  {
                    path: 'path/to/file.js',
                    start_line: 10,
                    end_line: 15,
                    annotation_level: 'warning',
                    message: 'Line 12: Use `const` instead of `let`.'
                  }
                ]
              }
            })
      # - name: Run tests
      #   run: npm test
      # - name: Build
      #   run: npm run build
      # - name: Deploy
      #   run: echo "Deploying ..."
